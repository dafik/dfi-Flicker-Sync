var $ = require('jquery');
var events = require('events');
var fs = require('fs');
var path = require('path');
var jade = require('jade');
var util = require('util');
var mime = require('mime');


// Template engine
var collectionsView = jade.compileFile(global.appRoot + '/lib/view/templates/flicker/collections.jade');
var collectionView = jade.compileFile(global.appRoot + '/lib/view/templates/flicker/collection.jade');
var photosetView = jade.compileFile(global.appRoot + '/lib/view/templates/flicker/set.jade');

// Our type
function Collections(jquery_element) {
    events.EventEmitter.call(this);
    this.element = jquery_element;

    var self = this;
    // Click on blank
    this.element.parent().on('click', function () {
        self.element.children('.focus').removeClass('focus');
    });
    // Click on file
    this.element.delegate('.file', 'click', function (e) {
        self.element.children('.focus').removeClass('focus');
        $(this).addClass('focus');
        e.stopPropagation();
    });
    // Double click on file
    this.element.delegate('.file', 'dblclick', function () {
        var collectionId = $(this).attr('data-id');
        var collectionName = $(this).attr('data-name');
        self.emit('navigate', collectionId, collectionName);
    });
}

util.inherits(Collections, events.EventEmitter);

Collections.prototype.open = function (collections,type) {
    var self = this;

    if(type == 'collections') {
        var tmp = [];
        collections[0].collection.forEach(function (collection) {
            if (collection['$'].iconsmall.indexOf('http') == -1) {
                collection['$'].iconsmall = 'https://www.flickr.com' + collection['$'].iconsmall
            }
            tmp.push(collection['$']);
        })

        self.element.html(collectionsView({collections: tmp}));
    }
    if(type == 'collection') {
        var tmp = [];
        collections.forEach(function (collection) {
            if (collection['$'].iconsmall.indexOf('http') == -1) {
                collection['$'].iconsmall = 'https://www.flickr.com' + collection['$'].iconsmall
            }
            tmp.push(collection['$']);
        })

        self.element.html(collectionView({collections: tmp}));
    }
    if(type == 'photoset') {
        var tmp = [];
        collections[0].collection.forEach(function (collection) {
            if (collection['$'].iconsmall.indexOf('http') == -1) {
                collection['$'].iconsmall = 'https://www.flickr.com' + collection['$'].iconsmall
            }
            tmp.push(collection['$']);
        })

        self.element.html(photosetView({collections: tmp}));
    }

}

module.exports = Collections;
